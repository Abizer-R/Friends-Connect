 name: Publish

 on:
   push:
     branches: [main]

 jobs:
  test:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Run unit tests
        run: ./gradlew testDebug


  apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Assemble app debug APK
        run: ./gradlew assembleDebug

      - name: Upload app APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Assemble app instrumentation tests
        run: ./gradlew assembleDebugAndroidTest

      - name: Upload app test APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-androidTest
          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk



  firebase:
    name: Run UI tests with Firebase Test Lab
    needs: apk
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v4

      - name: Download APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug

      - name: Download app test APK
        uses: actions/download-artifact@v4
        with:
          name: app-debug-androidTest

      - name: List files in workspace
        run: ls -R

      - id: 'auth'
        name: Authenticate Google Cloud
        uses: 'google-github-actions/auth@v2'
        with:
          service_account: ${{ secrets.GCLOUD_FRIENDS_CONNECT_SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Set up Google Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Run instrumentation tests in Firebase Test Lab
        run: "gcloud firebase test android run 
        --type instrumentation 
        --app app-debug.apk 
        --test app-debug-androidTest.apk 
        --device model=oriole,version=31"

#  distribute:
#    name: Distribute app bundle to Play Store
#    needs: firebase
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#          cache: gradle
#
#      - name: Version Bump
#        uses: chkfung/android-version-actions@v1.1
#        with:
#          gradlePath: app/build.gradle
#          versionCode: ${{ github.run_number }}
#
#      - name: Assemble Release Bundle
#        run: ./gradlew bundleRelease
#
#      - name: Sign Release
#        uses: r0adkll/sign-android-release@v1
#        with:
#          releaseDirectory: app/build/outputs/bundle/release
#          signingKeyBase64: ${{ secrest.ANDROID_KEYSTORE }}
#          alias: ${{ secrets.FRIENDS_CONNECT_KEY_ALIAS }}
#          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
#          keyPassword: ${{ secrets.FRIENDS_CONNECT_KEY_PASSWORD }}
#
#      - name: Setup authorization with Google Play Store
#        run: echo '${{ secrets.GOOGLE_SERVICES_API }}' > service_account.json
#
#      - name: Deploy to internal
#        uses: r0adkll/upload-google-play@v1
#        with:
#          serviceAccountJson: service_account.json
#          packageName: com.abizer_r.friendsconnect
#          releaseFiles: app/build/outputs/bundle/release/app-release.aab
#          track: internal
#          whatsNewDirectory: whatsNewDirectory/